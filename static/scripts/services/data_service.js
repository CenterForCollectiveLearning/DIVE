// Generated by CoffeeScript 1.6.3
(function() {
  diveApp.service("AllProjectsService", function($http) {
    var myProjects;
    myProjects = [];
    return {
      promise: function(userName, callback) {
        return $http.get('/api/project', {
          params: {
            user_name: userName
          }
        }).success(function(result) {
          return callback(result);
        });
      },
      getProjects: function() {
        return myProjects;
      }
    };
  });

  engineApp.service("ProjectIDService", function($http, $stateParams) {
    console.log("ProjectIDService", $stateParams);
    return {
      promise: $http.get("/api/getProjectID", {
        params: {
          formattedProjectTitle: $stateParams.formattedProjectTitle
        }
      }).success(function(pID) {
        return $rootScope.pID = pID;
      })
    };
  });

  engineApp.service("DataService", function($http, $rootScope) {
    var myData;
    console.log('DataService', $rootScope.pID);
    myData = [];
    return {
      promise: function(callback) {
        return $http.get("/api/data", {
          params: {
            pID: $rootScope.pID,
            sample: true
          }
        }).success(function(data) {
          return callback(data.datasets);
        });
      },
      getData: function() {
        return myData;
      }
    };
  });

  engineApp.service("PropertyService", function($http, $rootScope) {
    var myData;
    myData = void 0;
    return {
      promise: function(callback) {
        return $http.get("/api/property", {
          params: {
            pID: $rootScope.pID
          }
        }).success(function(data) {
          console.log('Property service success!');
          console.log('Properties', data);
          return callback(data);
        });
      },
      getData: function() {
        return myData;
      }
    };
  });

  engineApp.service("VizFromOntologyService", function($http) {
    var myData;
    myData = void 0;
    return {
      promise: function(initNetwork, callback) {
        $.ajax({
          url: "get_visualizations_from_ontology",
          type: "POST",
          data: JSON.stringify(initNetwork),
          cache: false,
          processData: false,
          contentType: false
        }).success(function(result) {
          callback(result);
        });
      },
      getData: function() {
        return myData;
      }
    };
  });

  engineApp.service("VizDataService", function($http) {
    var myData;
    myData = void 0;
    return {
      promise: function(vizSpec, callback) {
        return $http.get("get_treemap_data", {
          params: {
            condition: vizSpec.condition,
            aggregate: vizSpec.aggregate,
            query: "*",
            groupBy: vizSpec.groupBy
          }
        }).success(function(result) {
          return callback(result);
        });
      },
      getData: function() {
        return myData;
      }
    };
  });

}).call(this);
