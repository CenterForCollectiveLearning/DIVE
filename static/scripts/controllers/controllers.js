// Generated by CoffeeScript 1.6.3
(function() {
  var controllers,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  controllers = angular.module("engineControllers", ['ngAnimate']);

  controllers.controller("CreateProjectFormController", function($scope, $http, $location) {
    return $scope.create_project = function() {
      var params;
      params = {
        title: $scope.newProjectData.title,
        description: $scope.newProjectData.description,
        user_name: $scope.user.userName
      };
      return $http({
        method: 'POST',
        url: 'http://localhost:8888/api/project',
        data: params,
        transformRequest: objectToQueryString,
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded'
        }
      }).success(function(data, status) {
        return $location.path($scope.user.userName + '/' + data.formatted_title);
      }).error(function(data, status) {
        return $scope.titleTaken = true;
      });
    };
  });

  controllers.controller("ProjectListCtrl", function($scope, $http, $location, $rootScope, AllProjectsService) {
    $scope.newProjectData = {};
    $scope.newProject = false;
    $scope.user = {
      userName: 'demo-user',
      displayName: 'Demo User'
    };
    AllProjectsService.promise($scope.user.userName, function(projects) {
      return $scope.projects = projects;
    });
    $scope.select_project = function(pID) {
      return $rootScope.pID = pID;
    };
    return $scope.new_project_toggle = function() {
      return $scope.newProject = !$scope.newProject;
    };
  });

  controllers.controller("PaneToggleCtrl", function($scope) {
    $scope.leftClosed = false;
    $scope.rightClosed = false;
    $scope.toggleLeft = function() {
      return $scope.leftClosed = !$scope.leftClosed;
    };
    return $scope.toggleRight = function() {
      return $scope.rightClosed = !$scope.rightClosed;
    };
  });

  controllers.controller("TabsCtrl", function($scope, $state, $rootScope, $stateParams) {
    return $scope.tabs = [
      {
        route: "engine.data",
        label: "1. Manage Datasets"
      }, {
        route: "engine.ontology",
        label: "2. Edit Ontology"
      }, {
        route: "engine.visualize",
        label: "3. Select Visualizations"
      }, {
        route: "engine.assemble",
        label: "4. Assemble Engine"
      }
    ];
  });

  controllers.controller("DatasetListCtrl", function($scope, $rootScope, projectID, $http, $upload, $timeout, $stateParams, DataService) {
    $scope.selectedIndex = 0;
    $scope.currentPane = 'left';
    $scope.options = [
      {
        label: 'Upload File',
        inactive: false
      }, {
        label: 'Connect to Database',
        inactive: true
      }, {
        label: 'Connect to API',
        inactive: true
      }, {
        label: 'Search DIVE Datasets',
        inactive: true
      }
    ];
    $scope.select_option = function(index) {
      $scope.currentPane = 'left';
      if (!$scope.options[index].inactive) {
        return $scope.selectedIndex = index;
      }
    };
    $scope.select_dataset = function(index) {
      $scope.currentPane = 'right';
      return $scope.selectedIndex = index;
    };
    $scope.types = ["int", "float", "str"];
    DataService.promise(function(datasets) {
      return $scope.datasets = datasets;
    });
    $scope.onFileSelect = function($files) {
      var file, i, _results;
      i = 0;
      _results = [];
      while (i < $files.length) {
        file = $files[i];
        $scope.upload = $upload.upload({
          url: "/api/upload",
          data: {
            pID: $rootScope.pID
          },
          file: file
        }).progress(function(evt) {
          console.log("Percent loaded: " + parseInt(100.0 * evt.loaded / evt.total));
        }).success(function(data, status, headers, config) {
          return $scope.datasets.push(data);
        });
        _results.push(i++);
      }
      return _results;
    };
    return $scope.removeDataset = function(dID) {
      console.log('Removing dataset, dID:', dID);
      return $http["delete"]('/api/data', {
        params: {
          pID: $rootScope.pID,
          dID: dID
        }
      }).success(function(result) {
        var dataset, deleted_dIDs, newDatasets, _i, _len, _ref, _ref1;
        deleted_dIDs = result;
        newDatasets = [];
        _ref = $scope.datasets;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          dataset = _ref[_i];
          if (_ref1 = dataset.dID, __indexOf.call(deleted_dIDs, _ref1) < 0) {
            newDatasets.push(dataset);
          }
        }
        return $scope.datasets = newDatasets;
      });
    };
  });

  controllers.controller("OntologyEditorCtrl", function($scope, $http, DataService, PropertyService) {
    $scope.selectedLeftIndex = 0;
    $scope.selectedRightIndex = 0;
    $scope.currentPane = 'left';
    $scope.layoutOptions = [
      {
        label: 'Object',
        inactive: false
      }, {
        label: 'List',
        inactive: true
      }, {
        label: 'Hierarchy',
        inactive: true
      }
    ];
    $scope.editOptions = [
      {
        label: 'Add',
        inactive: true
      }, {
        label: 'Edit',
        inactive: true
      }, {
        label: 'Delete',
        inactive: true
      }
    ];
    $scope.select_left_option = function(index) {
      return $scope.selectedLeftIndex = index;
    };
    $scope.select_right_option = function(index) {
      return $scope.selectedRightIndex = index;
    };
    DataService.promise(function(datasets) {
      $scope.datasets = datasets;
      return console.log('Datasets dIDs:', _.pluck($scope.datasets, 'dID'));
    });
    return PropertyService.promise(function(properties) {
      console.log("In PropertyService", properties);
      $scope.properties = properties;
      $scope.overlaps = properties.overlaps;
      return $scope.hierarchies = properties.hierarchies;
    });
  });

  controllers.controller("AssembleCtrl", function($scope, $http) {});

  controllers.controller("CreateVizCtrl", function($scope, $http, DataService, PropertyService, VizDataService, SpecificationService) {
    DataService.promise(function(datasets) {
      console.log('Datasets dIDs:', _.pluck($scope.datasets, 'dID'));
      return $scope.datasets = datasets;
    });
    PropertyService.promise(function(properties) {
      $scope.properties = properties;
      $scope.overlaps = properties.overlaps;
      return $scope.hierarchies = properties.hierarchies;
    });
    return SpecificationService.promise(function(specifications) {
      return console.log('Specs:', specifications);
    });
  });

}).call(this);
