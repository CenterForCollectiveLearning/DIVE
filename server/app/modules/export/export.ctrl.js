var $, FileSaver;

$ = require('jquery');

FileSaver = require('filesaver');

angular.module('diveApp.export').directive('selectOnClick', function() {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      return element.on('click', function() {
        return this.select();
      });
    }
  };
});

angular.module('diveApp.export').controller("AssembleCtrl", function($scope, $rootScope, $http, $state, $location, VizDataService, ExportedVizSpecService, API_URL) {
  var params;
  $scope.conditionalOptions = [];
  $scope.selectedConditionalData = {};
  $scope.selectedConditionalValues = {};
  $scope.config = {
    width: 600,
    height: 500,
    backgroundColor: '#000000'
  };
  $scope.icons = {
    treemap: 'treemap.svg',
    barchart: 'barchart.svg',
    piechart: 'piechart.svg',
    geomap: 'geomap.svg',
    scatterplot: 'scatterplot.svg',
    linechart: 'linechart.svg'
  };
  $scope.modes = ['modify', 'export'];
  $scope.selectedMode = $scope.modes[1];
  $scope.selectMode = function(mode) {
    return $scope.selectedMode = mode;
  };
  params = {};
  ExportedVizSpecService.promise(params, function(specs) {
    $scope.specs = specs.result;
    return $scope.selectSpec(0);
  });
  $scope.save = function(format) {
    var svg, svg_xml, tmp;
    tmp = document.getElementById("viz-container");
    svg = tmp.getElementsByTagName("svg")[0];
    svg_xml = (new XMLSerializer).serializeToString(svg);
    return $http.post(API_URL + "/api/render_svg", {
      data: JSON.stringify({
        format: format,
        svg: svg_xml
      })
    }).success(function(data) {
      var file;
      file = new Blob([data], {
        type: 'application/' + format
      });
      return saveAs(file, 'test.' + format);
    });
  };
  return $scope.selectSpec = function(index) {
    var condition, dID, sID;
    $scope.selectedSpecIndex = index;
    $scope.selectedType = $scope.specs[index].viz_type;
    $scope.selectedSpec = $scope.specs[index];
    sID = $scope.specs[index].sID;
    condition = $scope.specs[index].condition;
    $scope.embedURL = $location.absUrl().split('//')[1].split('/')[0] + '/#' + $state.href('embed', {
      pID: $rootScope.pID,
      sID: sID
    });
    $scope.embedHTML = '<iframe width="560" height="315" src="' + $scope.embedURL + '" frameborder="0" allowfullscreen></iframe>';
    if ($scope.selectedSpec.aggregate) {
      dID = $scope.selectedSpec.aggregate.dID;
    } else {
      dID = $scope.selectedSpec.object.dID;
    }
    $scope.currentdID = dID;
    if (!$scope.selectedConditionalValues[dID]) {
      $scope.selectedConditionalValues[dID] = condition[dID];
    }
    params = {
      type: $scope.selectedType,
      spec: $scope.selectedSpec,
      conditional: $scope.selectedConditionalValues
    };
    return VizDataService.promise(params, function(result) {
      $scope.vizData = result.result;
      return $scope.loading = false;
    });
  };
});

// ---
// generated by coffee-script 1.9.0